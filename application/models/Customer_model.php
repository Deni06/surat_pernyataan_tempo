<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Customer_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    function add_registration($params, $registration_id)
    {        
        date_default_timezone_set('Asia/Jakarta'); 

        $this->db->trans_start();			

		$sql = "UPDATE registration SET check_out = '".date('Y-m-d H:i:s')."' WHERE 
        phone_number = '".$params["phone_number"]."' AND check_out > '".
        date('Y-m-d H:i:s')."'";
			
        $this->db->query($sql);	
            
        $this->db->insert('surat_pernyataan',$params);
        $surat_pernyataan_id = $this->db->insert_id();

        $data['surat_pernyataan_id'] = $surat_pernyataan_id;
        $data['phone_number'] = $params["phone_number"];
        $data['device_id'] = $params["device_id"];        
        $this->db->where('registration_id',$registration_id);   
        $this->db->update('registration',$data);   
        $this->db->trans_complete();
        return $surat_pernyataan_id;
    }    

    function check_active_device($device_id)
    {           
        date_default_timezone_set('Asia/Jakarta');     
        $count = $this->db->query("
            SELECT
                COALESCE(COUNT(1), 0) as count
            FROM
                `surat_pernyataan`
            WHERE valid_until > ? AND device_id = ? AND status = 1   
        ",array(date('Y-m-d H:i:s'), $device_id))->row();

        return $count;
    }

    function check_unique_character($unique_character)
    {           
        $unique = $this->db->query("
            SELECT
                character_checkin, lokasi_id
            FROM
                `lokasi`
                WHERE character_checkin = ? OR character_checkout = ?
        ",array($unique_character,$unique_character))->row();

        return $unique;
    }

    function check_character_checkin($unique_character)
    {           
        $unique = $this->db->query("
            SELECT
                r.*, sp.valid_until, l.nama_lokasi                
            FROM
                `registration` r
            LEFT JOIN surat_pernyataan sp 
            ON r.surat_pernyataan_id = sp.surat_pernyataan_id
            LEFT JOIN lokasi l 
            ON r.location_checkin = l.lokasi_id
            WHERE r.character_registration = ?
        ",array($unique_character))->row();

        return $unique;
    }

    function add_checkin($params)
    {                 
        $this->db->insert('registration',$params);        
        return true;
    } 
    
    function update_checkout($registration_id,$params)
    {    
        $this->db->where('registration_id',$registration_id);
        return $this->db->update('registration',$params);
    }

    function update_checkin($unique_character,$params)
    {    
        $this->db->where('character_registration',$unique_character);
        return $this->db->update('registration',$params);
    }

    function check_active_phone_number($phone_number)
    {           
        date_default_timezone_set('Asia/Jakarta');
        $count = $this->db->query("
            SELECT
                COALESCE(COUNT(1), 0) as count
            FROM
                `surat_pernyataan`
            WHERE valid_until > ? AND phone_number = ? AND status = 1            
        ",array(date('Y-m-d H:i:s'), $phone_number))->row();

        return $count;
    }

    function get_active_phone_number($phone_number)
    {           
        date_default_timezone_set('Asia/Jakarta');
        $count = $this->db->query("
            SELECT
                surat_pernyataan_id
            FROM
                `surat_pernyataan`
            WHERE ((valid_until > ? AND status = 1) OR status = 0) AND phone_number = ?
            ORDER BY created_on DESC LIMIT 1          
        ",array(date('Y-m-d H:i:s'), $phone_number));

        return $count;
    }

    function get_last_phone($phone_number)
    {           
        date_default_timezone_set('Asia/Jakarta');
        $count = $this->db->query("
            SELECT
                registration_id
            FROM
                `registration`
            WHERE check_out > ? AND phone_number = ?
            ORDER BY check_out DESC LIMIT 1          
        ",array(date('Y-m-d H:i:s'), $phone_number));

        return $count;
    }

    function get_last_device($device_id)
    {           
        date_default_timezone_set('Asia/Jakarta');
        $count = $this->db->query("
            SELECT
                registration_id
            FROM
                `registration`
            WHERE check_out > ? AND device_id = ?
            ORDER BY check_out DESC LIMIT 1          
        ",array(date('Y-m-d H:i:s'), $device_id));

        return $count;
    }

    function check_lat_long($latitude, $longitude)
    {                               
        $count = $this->db->query("
        SELECT 
        ST_Distance_Sphere( POINT(106.82942072812607, -6.234994898195947), POINT(?, ?)) <= 100 as distance
        ",array($longitude, $latitude))->row();        

        return $count;
    }
}
