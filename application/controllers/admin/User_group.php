<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User_group extends CI_Controller{
    function __construct()
    {
        parent::__construct(); 
        
        $count = $this->db->query("SELECT COUNT(1) as count FROM company
        WHERE LOWER(company_name) = LOWER('PT. TEMPO REALTY')")->row();						
        
        if($count->count <= 0){
            $this->session->set_flashdata('error','Invalid Serial Number');    
            redirect('login');  
        }
        
        if($this->session->userdata('is_login') !=  true)
        {
            $this->session->set_flashdata('error','You have no access to that page.');
            redirect('login');  
        }             
        $this->load->model('user_group_model');
        $this->load->model('general_model');     
        $this->load->model('Lokasi_model');
    } 

    /*
     * Listing of category
     */
    function index()
    {
        $this->user_library->checking_page_access('user_group',"user_group","view");   
        $data['user_group'] = $this->user_group_model->get_all_user_group();            
        $this->load->view('backend/user_group/master_usergroup',$data);
    }

    /*
     * Adding a new category
     */
    function add()
    {   
        $this->user_library->checking_page_access('user_group',"user_group","add"); 
        $dataGroups['lokasi'] = $this->Lokasi_model->get_all_lokasi();  
        if(isset($_POST) && count($_POST) > 0)     
        {               

        $name = $this->input->post('user_group_name');        
        $location = $this->input->post('locations');
        $user = $this->input->post('users');
        $user_group = $this->input->post('user_groups');
        $recap_visitor = $this->input->post('recap_visitors');
        $background = $this->input->post('backgrounds');        
        $location_my_task = $this->input->post('location_my_task');
        
            $this->db->trans_start();

            $data['gro_name'] = $name;
            if($location != "" && $location != null && count($location) > 0){
                $location_format = "";
                $index = 0;
                if(is_array($location)){
                    foreach($location as $key => $value){
                        if($index == 0){
                            $location_format.=";";
                        }
                        $location_format.=$value.";";
                        $index++;
                    }
                }else{
                    $location_format = ";".$location.";";
                }
                $data['location_all_access'] = $location_format;
            }
            if($user != "" && $user != null && count($user) > 0){
                $user_access_format = "";
                $index = 0;
                if(is_array($user)){
                    foreach($user as $key => $value){
                        if($index == 0){
                            $user_access_format.=";";
                        }
                        $user_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $user_access_format = ";".$user.";";
                }
                $data['user_all_access'] = $user_access_format;
            }
            if($user_group != "" && $user_group != null && count($user_group) > 0){
                $user_group_access_format = "";
                $index = 0;
                if(is_array($user_group)){
                    foreach($user_group as $key => $value){
                        if($index == 0){
                            $user_group_access_format.=";";
                        }
                        $user_group_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $user_group_access_format = ";".$user_group.";";
                }
                $data['user_group_all_access'] = $user_group_access_format;
            }
            if($recap_visitor != "" && $recap_visitor != null && count($recap_visitor) > 0){
                $recap_visitor_access_format = "";
                $index = 0;
                if(is_array($recap_visitor)){
                    foreach($recap_visitor as $key => $value){
                        if($index == 0){
                            $recap_visitor_access_format.=";";
                        }
                        $recap_visitor_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $recap_visitor_access_format = ";".$recap_visitor.";";
                }
                $data['recap_visitor_all_access'] = $recap_visitor_access_format;
            }
            if($background != "" && $background != null && count($background) > 0){
                $background_access_format = "";
                $index = 0;
                if(is_array($background)){
                    foreach($background as $key => $value){
                        if($index == 0){
                            $background_access_format.=";";
                        }
                        $background_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $background_access_format = ";".$background.";";
                }
                $data['background_all_access'] = $background_access_format;
            }
            if($location_my_task != "" && $location_my_task != null && count($location_my_task) > 0 && $this->input->post('my_task') == 1){
                $location_my_task_access_format = "";
                $index = 0;
                if(is_array($location_my_task)){
                    foreach($location_my_task as $key => $value){
                        if($index == 0){
                            $location_my_task_access_format.=";";
                        }
                        $location_my_task_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $location_my_task_access_format = ";".$location_my_task.";";
                }
                $data['location_my_task_all_access'] = $location_my_task_access_format;
            }
            
            $data['report_all_access'] = $this->input->post('report');
            $data['declaration_form_all_access'] = $this->input->post('declaration_form');
            $data['my_task_all_access'] = $this->input->post('my_task');
            $data['visitor_in_building_all_access'] = $this->input->post('visitor_in_building');

            $this->db->insert('groups',$data);            
            $this->db->trans_complete();

            $this->session->set_flashdata('success','Add User Group Success');                         
            redirect('admin/user_group');        
        }
        else
        {                        
            $this->load->view('backend/user_group/add_usergroup', $dataGroups);
        }
    }  

    /*
     * Editing a category
     */
    function edit($group_id)
    {   
        $this->user_library->checking_page_access('user_group',"user_group","edit");   
        // check if the category exists before trying to edit it
        if($group_id == 1) {
            $this->session->set_flashdata('error', "Maaf Anda Tidak Dapat Mengubah Group Admin !");
            redirect('admin/user_group');
        }
        $data_by_id['user_group'] = $this->user_group_model->get_user_group($group_id);
        $data_by_id['user'] = explode(';', $data_by_id['user_group']['user_all_access']);
        $data_by_id['user_group_access'] = explode(';', $data_by_id['user_group']['user_group_all_access']);
        $data_by_id['recap_visitor_access'] = explode(';', $data_by_id['user_group']['recap_visitor_all_access']);
        $data_by_id['background'] = explode(';', $data_by_id['user_group']['background_all_access']);        
        $data_by_id['location'] = explode(';', $data_by_id['user_group']['location_all_access']);                
        $data_by_id['location_my_task_access'] = explode(';', $data_by_id['user_group']['location_my_task_all_access']);     
        $data_by_id['lokasi'] = $this->Lokasi_model->get_all_lokasi(); 
                
        if(isset($data_by_id['user_group']['gro_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {                   
                $name = $this->input->post('user_group_name');        
                $location = $this->input->post('locations');
                $user = $this->input->post('users');
                $user_group = $this->input->post('user_groups');
                $recap_visitor = $this->input->post('recap_visitors');
                $background = $this->input->post('backgrounds');
                $location_my_task = $this->input->post('location_my_task');
                                 
            $this->db->trans_start();

            $data['gro_name'] = $name;
            if($location != "" && $location != null && count($location) > 0){
                $location_format = "";
                $index = 0;
                if(is_array($location)){
                    foreach($location as $key => $value){
                        if($index == 0){
                            $location_format.=";";
                        }
                        $location_format.=$value.";";
                        $index++;
                    }
                }else{
                    $location_format = ";".$location.";";
                }
                $data['location_all_access'] = $location_format;
            }else{
                $data['location_all_access'] = null;
            }

            if($user != "" && $user != null && count($user) > 0){
                $user_access_format = "";
                $index = 0;
                if(is_array($user)){
                    foreach($user as $key => $value){
                        if($index == 0){
                            $user_access_format.=";";
                        }
                        $user_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $user_access_format = ";".$user.";";
                }                                
                $data['user_all_access'] = $user_access_format;
            }else{
                $data['user_all_access'] = null;
            }

            if($user_group != "" && $user_group != null && count($user_group) > 0){
                $user_group_access_format = "";
                $index = 0;
                if(is_array($user_group)){
                    foreach($user_group as $key => $value){
                        if($index == 0){
                            $user_group_access_format.=";";
                        }
                        $user_group_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $user_group_access_format = ";".$user_group.";";
                }
                $data['user_group_all_access'] = $user_group_access_format;
            }else{
                $data['user_group_all_access'] = null;
            }

            if($recap_visitor != "" && $recap_visitor != null && count($recap_visitor) > 0){
                $recap_visitor_access_format = "";
                $index = 0;
                if(is_array($recap_visitor)){
                    foreach($recap_visitor as $key => $value){
                        if($index == 0){
                            $recap_visitor_access_format.=";";
                        }
                        $recap_visitor_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $recap_visitor_access_format = ";".$recap_visitor.";";
                }
                $data['recap_visitor_all_access'] = $recap_visitor_access_format;
            }else{
                $data['recap_visitor_all_access'] = null;
            }

            if($background != "" && $background != null && count($background) > 0){
                $background_access_format = "";
                $index = 0;
                if(is_array($background)){
                    foreach($background as $key => $value){
                        if($index == 0){
                            $background_access_format.=";";
                        }
                        $background_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $background_access_format = ";".$background.";";
                }
                $data['background_all_access'] = $background_access_format;
            }else{
                $data['background_all_access'] = null;
            }

            if($location_my_task != "" && $location_my_task != null && count($location_my_task) > 0 && $this->input->post('my_task') == 1){
                $location_my_task_access_format = "";
                $index = 0;
                if(is_array($location_my_task)){
                    foreach($location_my_task as $key => $value){
                        if($index == 0){
                            $location_my_task_access_format.=";";
                        }
                        $location_my_task_access_format.=$value.";";
                        $index++;
                    }
                }else{
                    $location_my_task_access_format = ";".$location_my_task.";";
                }
                $data['location_my_task_all_access'] = $location_my_task_access_format;
            }else{
                $data['location_my_task_all_access'] = null;
            }

            $data['report_all_access'] = $this->input->post('report');
            $data['declaration_form_all_access'] = $this->input->post('declaration_form');
            $data['my_task_all_access'] = $this->input->post('my_task');
            $data['visitor_in_building_all_access'] = $this->input->post('visitor_in_building');
            
            $where['gro_id'] = $group_id;

            $this->db->update('groups',$data,$where);   
            $this->user_library->reset_login_info();         
            $this->db->trans_complete();          
                        
            $this->session->set_flashdata('success','Update User Group Success');                         
            redirect('admin/user_group/index');        
            }
            else
            {                        
                $this->load->view('backend/user_group/edit_usergroup',$data_by_id);
            }
        }
        else {
            $this->session->set_flashdata('error','The User Group you are trying to Edit does not exist.');                                
        redirect('admin/user_group/');
        }        
    } 

    public function View($id){
        $this->user_library->checking_page_access('user_group',"user_group","view");   
        $data_by_id['user_group'] = $this->user_group_model->get_user_group($id);
        $data_by_id['user'] = explode(';', $data_by_id['user_group']['user_all_access']);
        $data_by_id['user_group_access'] = explode(';', $data_by_id['user_group']['user_group_all_access']);
        $data_by_id['recap_visitor_access'] = explode(';', $data_by_id['user_group']['recap_visitor_all_access']);
        $data_by_id['background'] = explode(';', $data_by_id['user_group']['background_all_access']);        
        $data_by_id['location'] = explode(';', $data_by_id['user_group']['location_all_access']);           
        $data_by_id['location_my_task_access'] = explode(';', $data_by_id['user_group']['location_my_task_all_access']);     
        $data_by_id['lokasi'] = $this->Lokasi_model->get_all_lokasi(); 

        if(isset($data_by_id['user_group']['gro_id']))
        {
            $this->load->view('backend/user_group/view_usergroup',$data_by_id);
        }else{
            $this->session->set_flashdata('error','User Group doesnt exist');    
            redirect('admin/user_group');
        }		
	}

    /*
     * Deleting category
     */
    function remove($group_id)
    {
        $this->user_library->checking_page_access('user_group',"user_group","delete");   
        $user_group = $this->user_group_model->get_user_group($group_id);

        // check if the category exists before trying to delete it
        if(isset($user_group['gro_id']))
        {
            $check_group = $this->user_group_model->check_user_group($group_id);                        
            if($check_group > 0){                                
                $this->session->set_flashdata('error','The User Group still use by the User');                                
                redirect('admin/user_group/');
            }                        
            $this->user_group_model->delete_user_group($group_id);
            $this->session->set_flashdata('success','Delete User Group Success'); 
            redirect('admin/user_group/');
        }
        else            
            $this->session->set_flashdata('error','The User Group you are trying to delete does not exist.');                                
                redirect('admin/user_group/');
    }    
}
