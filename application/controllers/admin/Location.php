<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Location extends CI_Controller{
    function __construct()
    {
        parent::__construct();

        $count = $this->db->query("SELECT COUNT(1) as count FROM company
        WHERE LOWER(company_name) = LOWER('PT. TEMPO REALTY')")->row();						
        
        if($count->count <= 0){
            $this->session->set_flashdata('error','Invalid Serial Number');    
            redirect('login');  
        }

        if($this->session->userdata('is_login') !=  true)
        {
            $this->session->set_flashdata('error','You have no access to that page.');
            redirect('login');  
        }
        $this->load->model('Lokasi_model');
        $this->load->model('general_model');        
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $this->user_library->checking_page_access('location',"location","view");           
        $data['lokasi'] = $this->Lokasi_model->get_all_lokasi();
        $this->load->view('backend/lokasi/master_lokasi',$data);
    }
         
    function add()
    {   
        $this->user_library->checking_page_access('location',"location","add");

        date_default_timezone_set('Asia/Jakarta');
        if(isset($_POST) && count($_POST) > 0)     
        {   

            if($this->input->post('is_emergency_gate') == 1){
                $where_check_location['is_emergency_gate'] = 1;    
            $count_location = $this->general_model->get_info("count(1) as count", "lokasi", $where_check_location)->row();                

            if($count_location->count > 0){
                $this->session->set_flashdata('error','Emergency Gate Location already set for other location');    
                return $this->load->view('backend/lokasi/add_lokasi');
            }
            }            
        
            $this->load->library('ciqrcode'); //pemanggilan library QR CODE        

        $unique_character_checkin = '';
        $image_name_checkin = '';
        $unique_character_checkout = '';
        $image_name_checkout = '';
        $image_url_checkin = '';
        $image_url_checkout = '';
        if($this->input->post('generate_checkin') == 1){            

        $unique_character_checkin = $this->generateCharacter();
        
        $data = base_url().'customer/registrasi/'.$unique_character_checkin;

        $size = '540x540';

        $logopath = getcwd().'/assets/img/logo-qr.jpg';
        $logo = imagecreatefromstring(file_get_contents($logopath));
            
        $image_name_checkin = 'checkin-'.$unique_character_checkin.'-'.date('dmYHis').'.png'; //buat name dari qr code sesuai dengan nip        

        $image_url_checkin = base_url()."assets/images/check_in/".$image_name_checkin;

        $QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.$data);

        $QR_width = imagesx($QR);
$QR_height = imagesy($QR);

$logo_width = imagesx($logo);
$logo_height = imagesy($logo);

$logo_qr_width = $QR_width/3;
$scale = $logo_width/$logo_qr_width;
$logo_qr_height = $logo_height/$scale;

imagecopyresampled($QR, $logo, $QR_width/3, $QR_height/3, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height);

imagepng($QR,FCPATH.'assets/images/check_in/'.$image_name_checkin);
        }                

        if($this->input->post('generate_checkout') == 1){
            $unique_character_checkout = $this->generateCharacter();
        
        $data = base_url().'customer/registrasi/'.$unique_character_checkout;

        $size = '540x540';

        $logopath = getcwd().'/assets/img/logo-qr.jpg';
        $logo = imagecreatefromstring(file_get_contents($logopath));
            
        $image_name_checkout = 'checkout-'.$unique_character_checkout.'-'.date('dmYHis').'.png'; //buat name dari qr code sesuai dengan nip        

        $image_url_checkout = base_url()."assets/images/check_out/".$image_name_checkout;

        $QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.$data);

        $QR_width = imagesx($QR);
$QR_height = imagesy($QR);

$logo_width = imagesx($logo);
$logo_height = imagesy($logo);

$logo_qr_width = $QR_width/3;
$scale = $logo_width/$logo_qr_width;
$logo_qr_height = $logo_height/$scale;

imagecopyresampled($QR, $logo, $QR_width/3, $QR_height/3, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height);

imagepng($QR,FCPATH.'assets/images/check_out/'.$image_name_checkout);
        }                
            
            $data = array(												
				'nama_lokasi' => $this->input->post('nama_lokasi'),
                'character_checkin' => $unique_character_checkin,				
                'character_checkout' => $unique_character_checkout,				
				'created_on'=> date('Y-m-d H:i:s'),
                'image_checkin' => $image_url_checkin,
                'image_checkout' => $image_url_checkout,                
            );

            if($this->input->post('generate_checkin') == 1){
                $data['is_image_checkin'] = 1;
            }

            if($this->input->post('generate_checkout') == 1){
                $data['is_image_checkout'] = 1;
            }

            if($this->input->post('is_emergency_gate') == 1){
                $data['is_emergency_gate'] = 1;
            }
            
            $user_id = $this->Lokasi_model->add_lokasi($data);
            $this->session->set_flashdata('success','Generate Location QR Code Success');    
            redirect('admin/location');
        }
        else
        {                        
            $this->load->view('backend/lokasi/add_lokasi');
        }
    }  

    function update($id)
    {   
        $this->user_library->checking_page_access('location',"location","edit");

        date_default_timezone_set('Asia/Jakarta');

        $data["me"] = $this->Lokasi_model->get_lokasi($id);   
        if(isset($data['me']['lokasi_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
        {                          
            
            $this->load->library('ciqrcode'); //pemanggilan library QR CODE                    

        $dataUpdate = array(												
            'nama_lokasi' => $this->input->post('nama_lokasi'),                        
            'updated_on'=> date('Y-m-d H:i:s'),            
        );

        if($this->input->post('is_emergency_gate') == 1){
            $where_check_location['is_emergency_gate'] = 1;
            $exception_location['field'] = 'lokasi_id';
        $exception_location['value'] = $id;

        $count_location = $this->general_model->get_info("count(1) as count", "lokasi", $where_check_location,
        array(), array(), $exception_location)->row();                

        if($count_location->count > 0){
            $this->session->set_flashdata('error','Emergency Gate Location already set for other location');    
            return $this->load->view('backend/lokasi/add_lokasi');
        }

        $dataUpdate['is_emergency_gate'] = 1;
        }else{
            $dataUpdate['is_emergency_gate'] = 0;
        } 

        if($this->input->post('generate_checkin') == 1 && $data['me']['is_image_checkin'] == 0){            
        
        $dataUpdate['character_checkin'] = $this->generateCharacter();
        $image_name_checkin = 'checkin-'.$dataUpdate['character_checkin'].'-'.date('dmYHis').'.png'; //buat name dari qr code sesuai dengan nip
        
        $data = base_url().'customer/registrasi/'.$dataUpdate['character_checkin'];

        $size = '540x540';

        $logopath = getcwd().'/assets/img/logo-qr.jpg';
        $logo = imagecreatefromstring(file_get_contents($logopath));                

        $QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.$data);

        $QR_width = imagesx($QR);
        $QR_height = imagesy($QR);

        $logo_width = imagesx($logo);
        $logo_height = imagesy($logo);

        $logo_qr_width = $QR_width/3;
        $scale = $logo_width/$logo_qr_width;
        $logo_qr_height = $logo_height/$scale;

        imagecopyresampled($QR, $logo, $QR_width/3, $QR_height/3, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height);

        imagepng($QR,FCPATH.'assets/images/check_in/'.$image_name_checkin);

        $dataUpdate['image_checkin'] = base_url()."assets/images/check_in/".$image_name_checkin;
        $dataUpdate['is_image_checkin'] = 1;

        } else if($this->input->post('generate_checkin') != 1 && $data['me']['is_image_checkin'] == 1){
            $lastcheckin = explode(base_url('assets/images/check_in/'),$data['me']['image_checkin']);			
				if (count($lastcheckin) > 1) {
					if(file_exists(getcwd().'/assets/images/check_in'.$lastcheckin[1])){
					unlink(getcwd().'/assets/images/check_in'.$lastcheckin[1]);						
                }													
            }
            $dataUpdate['image_checkin'] = "";
            $dataUpdate['is_image_checkin'] = 0;
        }                

        if($this->input->post('generate_checkout') == 1 && $data['me']['is_image_checkout'] == 0){
            $dataUpdate['character_checkout'] = $this->generateCharacter();
        $image_name_checkout = 'checkout-'.$dataUpdate['character_checkout'].'-'.date('dmYHis').'.png'; //buat name dari qr code sesuai dengan nip
        
        $data = base_url().'customer/registrasi/'.$dataUpdate['character_checkout'];

        $size = '540x540';

        $logopath = getcwd().'/assets/img/logo-qr.jpg';
        $logo = imagecreatefromstring(file_get_contents($logopath));                

        $QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.$data);

        $QR_width = imagesx($QR);
        $QR_height = imagesy($QR);

        $logo_width = imagesx($logo);
        $logo_height = imagesy($logo);

        $logo_qr_width = $QR_width/3;
        $scale = $logo_width/$logo_qr_width;
        $logo_qr_height = $logo_height/$scale;

        imagecopyresampled($QR, $logo, $QR_width/3, $QR_height/3, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height);

        imagepng($QR,FCPATH.'assets/images/check_out/'.$image_name_checkout);

        $dataUpdate['image_checkout'] = base_url()."assets/images/check_out/".$image_name_checkout;
        $dataUpdate['is_image_checkout'] = 1;

        } else if($this->input->post('generate_checkout') != 1 && $data['me']['is_image_checkout'] == 1){
            $lastcheckout = explode(base_url('assets/images/check_out/'),$data['me']['image_checkout']);			
				if (count($lastcheckout) > 1) {
					if(file_exists(getcwd().'/assets/images/check_out'.$lastcheckout[1])){
					unlink(getcwd().'/assets/images/check_out'.$lastcheckout[1]);						
                }													
            }

            $dataUpdate['image_checkout'] = "";
            $dataUpdate['is_image_checkout'] = 0;
        }                                    
            
            $this->Lokasi_model->update_lokasi($id,$dataUpdate); 
            $this->session->set_flashdata('success','Update Location QR Code Success');    
            redirect('admin/location');
        }
        else
        {                        
            $this->load->view('backend/lokasi/edit_lokasi',$data);                		
        }            
        }else{
            $this->session->set_flashdata('error','Location doesnt exist');    
            redirect('admin/location');
        }        
    }
    
    function remove($usr_id)
    {
        $this->user_library->checking_page_access('location',"location","delete");   

        $user = $this->Lokasi_model->get_lokasi($usr_id);

        // check if the user exists before trying to delete it
        if(isset($user['lokasi_id']))
        {
            $this->Lokasi_model->delete_lokasi($usr_id);
            $lastcheckin = explode(base_url('assets/images/check_in/'),$user['image_checkin']);			
				if (count($lastcheckin) > 1) {
					if(file_exists(getcwd().'/assets/images/check_in'.$lastcheckin[1])){
					unlink(getcwd().'/assets/images/check_in'.$lastcheckin[1]);						
                }													
            }

            $lastcheckout = explode(base_url('assets/images/check_out/'),$user['image_checkout']);			
				if (count($lastcheckout) > 1) {
					if(file_exists(getcwd().'/assets/images/check_out'.$lastcheckout[1])){
					unlink(getcwd().'/assets/images/check_out'.$lastcheckout[1]);						
                }													
            }
            $this->session->set_flashdata('success','Delete Location Success');                
            redirect('admin/location');
        }
        else {
            $this->session->set_flashdata('error','Delete Location Failed');    
            redirect('admin/location');
        }            
    }

    public function View($id){
        $this->user_library->checking_page_access('location',"location","view");           

        $data["me"] = $this->Lokasi_model->get_lokasi($id);        
        if(isset($data['me']['lokasi_id']))
        {
            $this->load->view('backend/lokasi/view_lokasi',$data);
        }else{
            $this->session->set_flashdata('error','Location doesnt exist');    
            redirect('admin/location');
        }		
    }
    
    public function generateCharacter() { 
        $n=14; 
        $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'; 
        $randomString = ''; 
      
        for ($i = 0; $i < $n; $i++) { 
            $index = rand(0, strlen($characters) - 1); 
            $randomString .= $characters[$index]; 
        } 
      
        return $randomString; 
    }
    
}
